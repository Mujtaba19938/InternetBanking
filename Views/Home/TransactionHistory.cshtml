@model IEnumerable<InternetBanking.Models.Transaction>
@{
    ViewData["Title"] = "Transaction History";
    var account = ViewBag.Account as InternetBanking.Models.Account;
    var count = ViewBag.Count as int? ?? 10;
}

<!-- Page Header -->
<div class="bg-gradient-to-r from-blue-50 to-indigo-100 rounded-2xl p-8 mb-8">
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
        <div class="mb-6 lg:mb-0">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Transaction History</h1>
            <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-blue-600 rounded-full"></div>
                <p class="text-gray-600">Account: <span class="font-semibold text-blue-600">@account?.AccountNumber</span> - <span class="font-medium">@account?.AccountType</span></p>
            </div>
        </div>
        <div class="flex space-x-2">
            <a asp-action="TransactionHistory" asp-route-accountId="@account?.AccountId" asp-route-count="10"
               class="px-4 py-2 rounded-xl text-sm font-semibold transition-all duration-200 @(count == 10 ? "bg-blue-600 text-white shadow-lg" : "bg-white text-blue-600 border border-blue-200 hover:bg-blue-50")">
                Last 10
            </a>
            <a asp-action="TransactionHistory" asp-route-accountId="@account?.AccountId" asp-route-count="25"
               class="px-4 py-2 rounded-xl text-sm font-semibold transition-all duration-200 @(count == 25 ? "bg-blue-600 text-white shadow-lg" : "bg-white text-blue-600 border border-blue-200 hover:bg-blue-50")">
                Last 25
            </a>
            <a asp-action="TransactionHistory" asp-route-accountId="@account?.AccountId" asp-route-count="50"
               class="px-4 py-2 rounded-xl text-sm font-semibold transition-all duration-200 @(count == 50 ? "bg-blue-600 text-white shadow-lg" : "bg-white text-blue-600 border border-blue-200 hover:bg-blue-50")">
                Last 50
            </a>
        </div>
    </div>
</div>

<!-- Transaction History Card -->
<div class="bg-white rounded-2xl shadow-md overflow-hidden">
    <!-- Card Header -->
    <div class="bg-gray-50 px-8 py-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
            <div class="flex items-center space-x-3">
                <div class="w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center">
                    <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                </div>
                <div>
                    <h2 class="text-xl font-semibold text-gray-900">Recent Transactions</h2>
                    <p class="text-sm text-gray-500">Transaction history for your account</p>
                </div>
            </div>
            <div class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-semibold">
                @Model.Count() transactions
            </div>
        </div>
    </div>

    <!-- Transaction Content -->
    <div class="p-0">
        @if (Model.Any())
        {
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Date & Time</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Description</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Reference</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Amount</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Type</th>
                            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Status</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var transaction in Model)
                        {
                            var isCredit = transaction.ToAccountId == account?.AccountId;
                            var amountClass = isCredit ? "text-green-600" : "text-red-600";
                            var amountPrefix = isCredit ? "+" : "-";

                            <tr class="hover:bg-gray-50 transition-colors duration-150">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">
                                        @transaction.TransactionDate.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="text-sm text-gray-500">
                                        @transaction.TransactionDate.ToString("HH:mm")
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-sm font-semibold text-gray-900">
                                        @transaction.TransactionType
                                    </div>
                                    @if (!string.IsNullOrEmpty(transaction.Description))
                                    {
                                        <div class="text-sm text-gray-500 mt-1">
                                            @transaction.Description
                                        </div>
                                    }
                                    @if (isCredit)
                                    {
                                        <div class="text-xs text-gray-400 mt-1">
                                            From: @transaction.FromAccount?.AccountNumber
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-xs text-gray-400 mt-1">
                                            To: @transaction.ToAccountNumber
                                        </div>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-mono text-gray-600 bg-gray-100 px-2 py-1 rounded">
                                        @transaction.ReferenceNumber
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-lg font-bold @amountClass">
                                        @amountPrefix$@transaction.Amount.ToString("N2")
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold @(isCredit ? "bg-green-100 text-green-800" : "bg-blue-100 text-blue-800")">
                                        @(isCredit ? "Credit" : "Debit")
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @{
                                        var statusClass = transaction.Status switch
                                        {
                                            "Completed" => "bg-green-100 text-green-800",
                                            "Pending" => "bg-yellow-100 text-yellow-800",
                                            "Failed" => "bg-red-100 text-red-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        };
                                    }
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold @statusClass">
                                        @transaction.Status
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-16">
                <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                    <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-gray-900 mb-2">No Transactions Found</h3>
                <p class="text-gray-500 mb-6">No transactions have been made on this account yet.</p>
                <a asp-controller="Transaction" asp-action="FundTransfer" 
                   class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-xl hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Make Your First Transfer
                </a>
            </div>
        }
    </div>
</div>

<!-- Action Buttons -->
<div class="mt-8 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
    <a asp-controller="Home" asp-action="AccountDetails" asp-route-id="@account?.AccountId"
       class="inline-flex items-center px-6 py-3 bg-gray-100 text-gray-700 font-semibold rounded-xl hover:bg-gray-200 transition-colors">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to Account Details
    </a>
    
    <div class="relative">
        <button type="button" onclick="toggleStatementDropdown()" 
                class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-xl hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Generate Statement
            <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
        </button>
        
        <div id="statementDropdown" class="hidden absolute right-0 mt-2 w-64 bg-white rounded-xl shadow-lg border border-gray-200 py-2 z-10">
            <a href="/Statement/export-pdf?accountId=@account?.AccountId" 
               class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors">
                <svg class="w-5 h-5 mr-3 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                </svg>
                Download PDF
            </a>
            <a href="/Statement/export-excel?accountId=@account?.AccountId" 
               class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors">
                <svg class="w-5 h-5 mr-3 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                Download Excel
            </a>
            <div class="border-t border-gray-200 my-2"></div>
            <a href="/Statement/export-annual-pdf?accountId=@account?.AccountId" 
               class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors">
                <svg class="w-5 h-5 mr-3 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                Annual PDF
            </a>
            <a href="/Statement/export-annual-excel?accountId=@account?.AccountId" 
               class="flex items-center px-4 py-3 text-gray-700 hover:bg-gray-50 transition-colors">
                <svg class="w-5 h-5 mr-3 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                Annual Excel
            </a>
        </div>
    </div>
</div>

<script>
function toggleStatementDropdown() {
    const dropdown = document.getElementById('statementDropdown');
    dropdown.classList.toggle('hidden');
}

// Close dropdown when clicking outside
document.addEventListener('click', function(event) {
    const dropdown = document.getElementById('statementDropdown');
    const button = event.target.closest('button');
    
    if (!button || !button.onclick || button.onclick.toString().indexOf('toggleStatementDropdown') === -1) {
        dropdown.classList.add('hidden');
    }
});
</script>
