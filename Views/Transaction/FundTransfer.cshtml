@model InternetBanking.Models.ViewModels.FundTransferViewModel
@{
    ViewData["Title"] = "Fund Transfer";
}

<!-- Modern Page Header -->
<div class="flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8">
    <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Fund Transfer</h1>
        <p class="text-gray-600">Securely transfer funds between accounts or to external recipients</p>
    </div>
    
    <!-- Last Login Info -->
    <div class="mt-4 lg:mt-0">
        <div class="bg-gray-50 rounded-xl px-4 py-3">
            <p class="text-sm text-gray-600">
                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Last login: @DateTime.Now.ToString("MMM dd, yyyy 'at' HH:mm")
            </p>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Transfer Form -->
    <div class="lg:col-span-2">
        <div class="bg-white rounded-2xl shadow-lg p-8">
            <form asp-action="FundTransfer" method="post" id="fundTransferForm">
                <div asp-validation-summary="ModelOnly" class="text-red-600 mb-6 p-4 bg-red-50 rounded-xl"></div>

                <!-- From Account -->
                <div class="mb-6">
                    <label for="FromAccountId" class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                        </svg>
                        From Account
                    </label>
                    <select asp-for="FromAccountId" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                        <option value="">Select Account</option>
                        @if (Model.FromAccounts != null)
                        {
                            @foreach (var account in Model.FromAccounts)
                            {
                                <option value="@account.AccountId">
                                    @account.AccountNumber - @account.AccountType (Balance: $@account.Balance.ToString("N2"))
                                </option>
                            }
                        }
                    </select>
                    <span asp-validation-for="FromAccountId" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- To Account -->
                <div class="mb-6">
                    <label asp-for="ToAccountNumber" class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                        To Account / Beneficiary
                    </label>
                    <input asp-for="ToAccountNumber" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" placeholder="Enter recipient account number" />
                    <span asp-validation-for="ToAccountNumber" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- Amount -->
                <div class="mb-6">
                    <label asp-for="Amount" class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                        </svg>
                        Transfer Amount
                    </label>
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                            <span class="text-gray-500 text-xl font-semibold">$</span>
                        </div>
                        <input asp-for="Amount" class="w-full pl-8 pr-4 py-4 text-2xl font-bold text-center border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" placeholder="0.00" step="0.01" />
                    </div>
                    <span asp-validation-for="Amount" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- Transfer Type -->
                <div class="mb-6">
                    <label class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        Transfer Type
                    </label>
                    <div class="grid grid-cols-2 gap-4">
                        <label class="relative">
                            <input type="radio" name="transferType" value="internal" checked class="sr-only peer">
                            <div class="p-4 border-2 border-gray-200 rounded-xl cursor-pointer peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all">
                                <div class="text-center">
                                    <svg class="w-8 h-8 mx-auto mb-2 text-gray-400 peer-checked:text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"></path>
                                    </svg>
                                    <p class="font-semibold text-gray-700 peer-checked:text-blue-700">Internal</p>
                                    <p class="text-sm text-gray-500">Same bank</p>
                                </div>
                            </div>
                        </label>
                        <label class="relative">
                            <input type="radio" name="transferType" value="external" class="sr-only peer">
                            <div class="p-4 border-2 border-gray-200 rounded-xl cursor-pointer peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all">
                                <div class="text-center">
                                    <svg class="w-8 h-8 mx-auto mb-2 text-gray-400 peer-checked:text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                                    </svg>
                                    <p class="font-semibold text-gray-700 peer-checked:text-blue-700">External</p>
                                    <p class="text-sm text-gray-500">Other banks</p>
                                </div>
                            </div>
                        </label>
                    </div>
                </div>

                <!-- Description -->
                <div class="mb-6">
                    <label asp-for="Description" class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        Notes (Optional)
                    </label>
                    <textarea asp-for="Description" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" rows="3" placeholder="Enter transfer description"></textarea>
                    <span asp-validation-for="Description" class="text-red-500 text-sm mt-1"></span>
                </div>

                <!-- Transaction Password -->
                <div class="mb-8">
                    <label asp-for="TransactionPassword" class="block text-sm font-semibold text-gray-700 mb-3">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        Transaction Password
                    </label>
                    <input asp-for="TransactionPassword" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" placeholder="Enter your transaction password" />
                    <span asp-validation-for="TransactionPassword" class="text-red-500 text-sm mt-1"></span>
                    <p class="text-sm text-gray-500 mt-2">This is different from your login password</p>
                </div>

                <!-- Action Buttons -->
                <div class="flex flex-col sm:flex-row gap-4 justify-end">
                    <a asp-controller="Home" asp-action="Dashboard" class="px-8 py-3 bg-gray-100 text-gray-700 rounded-xl font-semibold hover:bg-gray-200 transition-colors text-center">
                        Cancel
                    </a>
                    <button type="submit" class="px-8 py-3 bg-blue-600 text-white rounded-xl font-semibold hover:bg-blue-700 transition-colors shadow-lg hover:shadow-xl">
                        Review Transfer
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Recent Transfers Sidebar -->
    <div class="lg:col-span-1">
        <div class="bg-white rounded-2xl shadow-lg p-6">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-xl font-semibold text-gray-900">Recent Transfers</h3>
                <a href="#" class="text-blue-600 hover:text-blue-700 text-sm font-medium">View All</a>
            </div>
            
            <div class="space-y-4">
                <!-- Sample Recent Transfer 1 -->
                <div class="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                        </div>
                        <div>
                            <p class="font-semibold text-gray-900">John Doe</p>
                            <p class="text-sm text-gray-500">Dec 15, 2024</p>
                        </div>
                    </div>
                    <div class="text-right">
                        <p class="font-bold text-gray-900">$250.00</p>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                            Completed
                        </span>
                    </div>
                </div>

                <!-- Sample Recent Transfer 2 -->
                <div class="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center">
                            <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div>
                            <p class="font-semibold text-gray-900">Jane Smith</p>
                            <p class="text-sm text-gray-500">Dec 14, 2024</p>
                        </div>
                    </div>
                    <div class="text-right">
                        <p class="font-bold text-gray-900">$1,200.00</p>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                            Pending
                        </span>
                    </div>
                </div>

                <!-- Sample Recent Transfer 3 -->
                <div class="flex items-center justify-between p-4 bg-gray-50 rounded-xl">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                            <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </div>
                        <div>
                            <p class="font-semibold text-gray-900">Bob Johnson</p>
                            <p class="text-sm text-gray-500">Dec 13, 2024</p>
                        </div>
                    </div>
                    <div class="text-right">
                        <p class="font-bold text-gray-900">$500.00</p>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800">
                            Failed
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Security Notice -->
        <div class="mt-6 bg-blue-50 border border-blue-200 rounded-xl p-6">
            <div class="flex items-start space-x-3">
                <svg class="w-6 h-6 text-blue-600 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
                <div>
                    <h4 class="font-semibold text-blue-900 mb-2">Security Notice</h4>
                    <ul class="text-sm text-blue-800 space-y-1">
                        <li>• Verify recipient account number carefully</li>
                        <li>• Ensure you have sufficient balance</li>
                        <li>• Transaction password is required</li>
                        <li>• All transfers are processed immediately</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <script>
        $(document).ready(function() {
            let selectedAccount = null;
            
            // Store account data when account is selected
            $('#FromAccountId').change(function() {
                const accountId = $(this).val();
                if (accountId) {
                    const option = $(this).find('option:selected');
                    const balanceText = option.text().match(/Balance: \$([\d,]+\.?\d*)/);
                    if (balanceText) {
                        const balance = parseFloat(balanceText[1].replace(/,/g, ''));
                        selectedAccount = { id: accountId, balance: balance };
                        updateBalanceDisplay(balance);
                    }
                } else {
                    selectedAccount = null;
                    updateBalanceDisplay(0);
                }
            });
            
            // Update balance display with modern styling
            function updateBalanceDisplay(balance) {
                const balanceElement = $('#balanceDisplay');
                if (balanceElement.length === 0) {
                    $('#FromAccountId').after(`
                        <div id="balanceDisplay" class="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-xl">
                            <div class="flex items-center">
                                <svg class="w-5 h-5 text-blue-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                </svg>
                                <span class="text-blue-800 font-semibold">Available Balance: $${balance.toFixed(2)}</span>
                            </div>
                        </div>
                    `);
                } else {
                    balanceElement.find('span').text(`Available Balance: $${balance.toFixed(2)}`);
                }
            }
            
            // Validate amount against balance with modern styling
            $('#Amount').on('input', function() {
                const amount = parseFloat($(this).val()) || 0;
                const inputElement = $(this);
                
                if (selectedAccount && amount > selectedAccount.balance) {
                    inputElement.addClass('border-red-500 focus:ring-red-500');
                    inputElement.removeClass('border-gray-300 focus:ring-blue-500');
                    
                    if ($('#amountError').length === 0) {
                        inputElement.after(`
                            <div id="amountError" class="mt-2 p-3 bg-red-50 border border-red-200 rounded-xl">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                    </svg>
                                    <span class="text-red-800 font-medium">Amount exceeds available balance</span>
                                </div>
                            </div>
                        `);
                    }
                } else {
                    inputElement.removeClass('border-red-500 focus:ring-red-500');
                    inputElement.addClass('border-gray-300 focus:ring-blue-500');
                    $('#amountError').remove();
                }
            });
            
            // Form submission validation
            $('#fundTransferForm').submit(function(e) {
                const amount = parseFloat($('#Amount').val()) || 0;
                const toAccount = $('#ToAccountNumber').val().trim();
                
                if (!selectedAccount) {
                    e.preventDefault();
                    showNotification('Please select a source account.', 'error');
                    return false;
                }
                
                if (amount <= 0) {
                    e.preventDefault();
                    showNotification('Please enter a valid amount.', 'error');
                    return false;
                }
                
                if (amount > selectedAccount.balance) {
                    e.preventDefault();
                    showNotification('Insufficient balance for this transfer.', 'error');
                    return false;
                }
                
                if (!toAccount) {
                    e.preventDefault();
                    showNotification('Please enter recipient account number.', 'error');
                    return false;
                }
                
                // Show confirmation dialog
                const confirmMessage = `Confirm transfer of $${amount.toFixed(2)} from account ${selectedAccount.id} to ${toAccount}?`;
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                    return false;
                }
                
                // Disable submit button to prevent double submission
                $('button[type="submit"]').prop('disabled', true).html(`
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Processing...
                `);
            });
            
            // Modern notification function
            function showNotification(message, type) {
                const notification = $(`
                    <div class="fixed top-4 right-4 z-50 p-4 rounded-xl shadow-lg max-w-sm ${type === 'error' ? 'bg-red-100 border border-red-200' : 'bg-green-100 border border-green-200'}">
                        <div class="flex items-center">
                            <svg class="w-5 h-5 mr-3 ${type === 'error' ? 'text-red-600' : 'text-green-600'}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="${type === 'error' ? 'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z' : 'M5 13l4 4L19 7'}"></path>
                            </svg>
                            <span class="${type === 'error' ? 'text-red-800' : 'text-green-800'} font-medium">${message}</span>
                        </div>
                    </div>
                `);
                
                $('body').append(notification);
                
                setTimeout(() => {
                    notification.fadeOut(300, function() {
                        $(this).remove();
                    });
                }, 3000);
            }
        });
    </script>
}
